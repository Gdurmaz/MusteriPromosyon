<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>